<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.clt.core.mapper.UserExchangeBalanceAccountMapper">
  <resultMap id="BaseResultMap" type="cn.clt.core.entity.UserExchangeBalanceAccount">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="fans_exchange_number" jdbcType="INTEGER" property="fansExchangeNumber" />
    <result column="fans_before_balance" jdbcType="INTEGER" property="fansBeforeBalance" />
    <result column="fans_after_balance" jdbcType="INTEGER" property="fansAfterBalance" />
    <result column="browse_exchange_number" jdbcType="INTEGER" property="browseExchangeNumber" />
    <result column="browse_before_balance" jdbcType="INTEGER" property="browseBeforeBalance" />
    <result column="browse_after_balance" jdbcType="INTEGER" property="browseAfterBalance" />
    <result column="fabulous_exchange_number" jdbcType="INTEGER" property="fabulousExchangeNumber" />
    <result column="fabulous_before_balance" jdbcType="INTEGER" property="fabulousBeforeBalance" />
    <result column="fabulous_after_balance" jdbcType="INTEGER" property="fabulousAfterBalance" />
    <result column="comment_exchange_number" jdbcType="INTEGER" property="commentExchangeNumber" />
    <result column="comment_before_balance" jdbcType="INTEGER" property="commentBeforeBalance" />
    <result column="comment_after_balance" jdbcType="INTEGER" property="commentAfterBalance" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, fans_exchange_number, fans_before_balance, fans_after_balance, browse_exchange_number, 
    browse_before_balance, browse_after_balance, fabulous_exchange_number, fabulous_before_balance, 
    fabulous_after_balance, comment_exchange_number, comment_before_balance, comment_after_balance, 
    status, create_time
  </sql>
  <select id="selectByExample" parameterType="cn.clt.core.entity.UserExchangeBalanceAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_exchange_balance_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_exchange_balance_account
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_exchange_balance_account
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.clt.core.entity.UserExchangeBalanceAccountExample">
    delete from user_exchange_balance_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.clt.core.entity.UserExchangeBalanceAccount">
    insert into user_exchange_balance_account (id, user_id, fans_exchange_number, 
      fans_before_balance, fans_after_balance, browse_exchange_number, 
      browse_before_balance, browse_after_balance, 
      fabulous_exchange_number, fabulous_before_balance, 
      fabulous_after_balance, comment_exchange_number, 
      comment_before_balance, comment_after_balance, 
      status, create_time)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{fansExchangeNumber,jdbcType=INTEGER}, 
      #{fansBeforeBalance,jdbcType=INTEGER}, #{fansAfterBalance,jdbcType=INTEGER}, #{browseExchangeNumber,jdbcType=INTEGER}, 
      #{browseBeforeBalance,jdbcType=INTEGER}, #{browseAfterBalance,jdbcType=INTEGER}, 
      #{fabulousExchangeNumber,jdbcType=INTEGER}, #{fabulousBeforeBalance,jdbcType=INTEGER}, 
      #{fabulousAfterBalance,jdbcType=INTEGER}, #{commentExchangeNumber,jdbcType=INTEGER}, 
      #{commentBeforeBalance,jdbcType=INTEGER}, #{commentAfterBalance,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.clt.core.entity.UserExchangeBalanceAccount">
    insert into user_exchange_balance_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="fansExchangeNumber != null">
        fans_exchange_number,
      </if>
      <if test="fansBeforeBalance != null">
        fans_before_balance,
      </if>
      <if test="fansAfterBalance != null">
        fans_after_balance,
      </if>
      <if test="browseExchangeNumber != null">
        browse_exchange_number,
      </if>
      <if test="browseBeforeBalance != null">
        browse_before_balance,
      </if>
      <if test="browseAfterBalance != null">
        browse_after_balance,
      </if>
      <if test="fabulousExchangeNumber != null">
        fabulous_exchange_number,
      </if>
      <if test="fabulousBeforeBalance != null">
        fabulous_before_balance,
      </if>
      <if test="fabulousAfterBalance != null">
        fabulous_after_balance,
      </if>
      <if test="commentExchangeNumber != null">
        comment_exchange_number,
      </if>
      <if test="commentBeforeBalance != null">
        comment_before_balance,
      </if>
      <if test="commentAfterBalance != null">
        comment_after_balance,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="fansExchangeNumber != null">
        #{fansExchangeNumber,jdbcType=INTEGER},
      </if>
      <if test="fansBeforeBalance != null">
        #{fansBeforeBalance,jdbcType=INTEGER},
      </if>
      <if test="fansAfterBalance != null">
        #{fansAfterBalance,jdbcType=INTEGER},
      </if>
      <if test="browseExchangeNumber != null">
        #{browseExchangeNumber,jdbcType=INTEGER},
      </if>
      <if test="browseBeforeBalance != null">
        #{browseBeforeBalance,jdbcType=INTEGER},
      </if>
      <if test="browseAfterBalance != null">
        #{browseAfterBalance,jdbcType=INTEGER},
      </if>
      <if test="fabulousExchangeNumber != null">
        #{fabulousExchangeNumber,jdbcType=INTEGER},
      </if>
      <if test="fabulousBeforeBalance != null">
        #{fabulousBeforeBalance,jdbcType=INTEGER},
      </if>
      <if test="fabulousAfterBalance != null">
        #{fabulousAfterBalance,jdbcType=INTEGER},
      </if>
      <if test="commentExchangeNumber != null">
        #{commentExchangeNumber,jdbcType=INTEGER},
      </if>
      <if test="commentBeforeBalance != null">
        #{commentBeforeBalance,jdbcType=INTEGER},
      </if>
      <if test="commentAfterBalance != null">
        #{commentAfterBalance,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.clt.core.entity.UserExchangeBalanceAccountExample" resultType="java.lang.Long">
    select count(*) from user_exchange_balance_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_exchange_balance_account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.fansExchangeNumber != null">
        fans_exchange_number = #{record.fansExchangeNumber,jdbcType=INTEGER},
      </if>
      <if test="record.fansBeforeBalance != null">
        fans_before_balance = #{record.fansBeforeBalance,jdbcType=INTEGER},
      </if>
      <if test="record.fansAfterBalance != null">
        fans_after_balance = #{record.fansAfterBalance,jdbcType=INTEGER},
      </if>
      <if test="record.browseExchangeNumber != null">
        browse_exchange_number = #{record.browseExchangeNumber,jdbcType=INTEGER},
      </if>
      <if test="record.browseBeforeBalance != null">
        browse_before_balance = #{record.browseBeforeBalance,jdbcType=INTEGER},
      </if>
      <if test="record.browseAfterBalance != null">
        browse_after_balance = #{record.browseAfterBalance,jdbcType=INTEGER},
      </if>
      <if test="record.fabulousExchangeNumber != null">
        fabulous_exchange_number = #{record.fabulousExchangeNumber,jdbcType=INTEGER},
      </if>
      <if test="record.fabulousBeforeBalance != null">
        fabulous_before_balance = #{record.fabulousBeforeBalance,jdbcType=INTEGER},
      </if>
      <if test="record.fabulousAfterBalance != null">
        fabulous_after_balance = #{record.fabulousAfterBalance,jdbcType=INTEGER},
      </if>
      <if test="record.commentExchangeNumber != null">
        comment_exchange_number = #{record.commentExchangeNumber,jdbcType=INTEGER},
      </if>
      <if test="record.commentBeforeBalance != null">
        comment_before_balance = #{record.commentBeforeBalance,jdbcType=INTEGER},
      </if>
      <if test="record.commentAfterBalance != null">
        comment_after_balance = #{record.commentAfterBalance,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_exchange_balance_account
    set id = #{record.id,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      fans_exchange_number = #{record.fansExchangeNumber,jdbcType=INTEGER},
      fans_before_balance = #{record.fansBeforeBalance,jdbcType=INTEGER},
      fans_after_balance = #{record.fansAfterBalance,jdbcType=INTEGER},
      browse_exchange_number = #{record.browseExchangeNumber,jdbcType=INTEGER},
      browse_before_balance = #{record.browseBeforeBalance,jdbcType=INTEGER},
      browse_after_balance = #{record.browseAfterBalance,jdbcType=INTEGER},
      fabulous_exchange_number = #{record.fabulousExchangeNumber,jdbcType=INTEGER},
      fabulous_before_balance = #{record.fabulousBeforeBalance,jdbcType=INTEGER},
      fabulous_after_balance = #{record.fabulousAfterBalance,jdbcType=INTEGER},
      comment_exchange_number = #{record.commentExchangeNumber,jdbcType=INTEGER},
      comment_before_balance = #{record.commentBeforeBalance,jdbcType=INTEGER},
      comment_after_balance = #{record.commentAfterBalance,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.clt.core.entity.UserExchangeBalanceAccount">
    update user_exchange_balance_account
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="fansExchangeNumber != null">
        fans_exchange_number = #{fansExchangeNumber,jdbcType=INTEGER},
      </if>
      <if test="fansBeforeBalance != null">
        fans_before_balance = #{fansBeforeBalance,jdbcType=INTEGER},
      </if>
      <if test="fansAfterBalance != null">
        fans_after_balance = #{fansAfterBalance,jdbcType=INTEGER},
      </if>
      <if test="browseExchangeNumber != null">
        browse_exchange_number = #{browseExchangeNumber,jdbcType=INTEGER},
      </if>
      <if test="browseBeforeBalance != null">
        browse_before_balance = #{browseBeforeBalance,jdbcType=INTEGER},
      </if>
      <if test="browseAfterBalance != null">
        browse_after_balance = #{browseAfterBalance,jdbcType=INTEGER},
      </if>
      <if test="fabulousExchangeNumber != null">
        fabulous_exchange_number = #{fabulousExchangeNumber,jdbcType=INTEGER},
      </if>
      <if test="fabulousBeforeBalance != null">
        fabulous_before_balance = #{fabulousBeforeBalance,jdbcType=INTEGER},
      </if>
      <if test="fabulousAfterBalance != null">
        fabulous_after_balance = #{fabulousAfterBalance,jdbcType=INTEGER},
      </if>
      <if test="commentExchangeNumber != null">
        comment_exchange_number = #{commentExchangeNumber,jdbcType=INTEGER},
      </if>
      <if test="commentBeforeBalance != null">
        comment_before_balance = #{commentBeforeBalance,jdbcType=INTEGER},
      </if>
      <if test="commentAfterBalance != null">
        comment_after_balance = #{commentAfterBalance,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.clt.core.entity.UserExchangeBalanceAccount">
    update user_exchange_balance_account
    set user_id = #{userId,jdbcType=VARCHAR},
      fans_exchange_number = #{fansExchangeNumber,jdbcType=INTEGER},
      fans_before_balance = #{fansBeforeBalance,jdbcType=INTEGER},
      fans_after_balance = #{fansAfterBalance,jdbcType=INTEGER},
      browse_exchange_number = #{browseExchangeNumber,jdbcType=INTEGER},
      browse_before_balance = #{browseBeforeBalance,jdbcType=INTEGER},
      browse_after_balance = #{browseAfterBalance,jdbcType=INTEGER},
      fabulous_exchange_number = #{fabulousExchangeNumber,jdbcType=INTEGER},
      fabulous_before_balance = #{fabulousBeforeBalance,jdbcType=INTEGER},
      fabulous_after_balance = #{fabulousAfterBalance,jdbcType=INTEGER},
      comment_exchange_number = #{commentExchangeNumber,jdbcType=INTEGER},
      comment_before_balance = #{commentBeforeBalance,jdbcType=INTEGER},
      comment_after_balance = #{commentAfterBalance,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>