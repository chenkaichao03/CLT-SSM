<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.clt.core.mapper.ConcernMapper">
  <resultMap id="BaseResultMap" type="cn.clt.core.entity.Concern">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="concern_user" jdbcType="VARCHAR" property="concernUser" />
    <result column="concerned_user" jdbcType="VARCHAR" property="concernedUser" />
    <result column="concern_type" jdbcType="INTEGER" property="concernType" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, concern_user, concerned_user, concern_type, status
  </sql>
  <select id="selectByExample" parameterType="cn.clt.core.entity.ConcernExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from concern
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from concern
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from concern
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.clt.core.entity.ConcernExample">
    delete from concern
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.clt.core.entity.Concern">
    insert into concern (id, concern_user, concerned_user, 
      concern_type, status)
    values (#{id,jdbcType=VARCHAR}, #{concernUser,jdbcType=VARCHAR}, #{concernedUser,jdbcType=VARCHAR}, 
      #{concernType,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.clt.core.entity.Concern">
    insert into concern
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="concernUser != null">
        concern_user,
      </if>
      <if test="concernedUser != null">
        concerned_user,
      </if>
      <if test="concernType != null">
        concern_type,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="concernUser != null">
        #{concernUser,jdbcType=VARCHAR},
      </if>
      <if test="concernedUser != null">
        #{concernedUser,jdbcType=VARCHAR},
      </if>
      <if test="concernType != null">
        #{concernType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.clt.core.entity.ConcernExample" resultType="java.lang.Long">
    select count(*) from concern
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update concern
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.concernUser != null">
        concern_user = #{record.concernUser,jdbcType=VARCHAR},
      </if>
      <if test="record.concernedUser != null">
        concerned_user = #{record.concernedUser,jdbcType=VARCHAR},
      </if>
      <if test="record.concernType != null">
        concern_type = #{record.concernType,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update concern
    set id = #{record.id,jdbcType=VARCHAR},
      concern_user = #{record.concernUser,jdbcType=VARCHAR},
      concerned_user = #{record.concernedUser,jdbcType=VARCHAR},
      concern_type = #{record.concernType,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.clt.core.entity.Concern">
    update concern
    <set>
      <if test="concernUser != null">
        concern_user = #{concernUser,jdbcType=VARCHAR},
      </if>
      <if test="concernedUser != null">
        concerned_user = #{concernedUser,jdbcType=VARCHAR},
      </if>
      <if test="concernType != null">
        concern_type = #{concernType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.clt.core.entity.Concern">
    update concern
    set concern_user = #{concernUser,jdbcType=VARCHAR},
      concerned_user = #{concernedUser,jdbcType=VARCHAR},
      concern_type = #{concernType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="listFans" parameterType="map" resultType="cn.clt.core.vo.UserInfoVO">
    select
    user_info.user_picture AS userPicture,
    user.user_name AS userName
    FROM  concern
    LEFT JOIN user
    ON concern.concern_user = user.id
    LEFT JOIN user_info
    ON concern.concern_user = user_info.user_id
    WHERE
    concern.status=1
    <if test="userId != null">
      AND concern.concerned_user = #{userId,jdbcType=VARCHAR}
    </if>
    <if test="pagination != null">
      limit #{pagination.start},#{pagination.pageSize}
    </if>
  </select>
  <select id="countFans" parameterType="map" resultType="java.lang.Long">
    select
    count(1)
    FROM  concern
    LEFT JOIN user
    ON concern.concern_user = user.id
    LEFT JOIN user_info
    ON concern.concern_user = user_info.user_id
    WHERE
    concern.status=1
    <if test="userId != null">
      AND concern.concerned_user = #{userId,jdbcType=VARCHAR}
    </if>
  </select>
  <select id="listConcern" parameterType="map" resultType="cn.clt.core.vo.UserInfoVO">
    select
    concern.concerned_user AS concernedUserId,
    user_info.user_picture AS userPicture,
    user.user_name AS userName,
    concern.concern_type AS concernType
    FROM  concern
    LEFT JOIN user
    ON concern.concerned_user = user.id
    LEFT JOIN user_info
    ON concern.concerned_user = user_info.user_id
    WHERE
    concern.status=1
    <if test="userId != null">
      AND concern.concern_user = #{userId,jdbcType=VARCHAR}
    </if>
    <if test="pagination != null">
    limit #{pagination.start},#{pagination.pageSize}
    </if>
  </select>
  <select id="countConcern" parameterType="map" resultType="java.lang.Long">
    select count(1)
    FROM  concern
    LEFT JOIN user
    ON concern.concern_user = user.id
    LEFT JOIN user_info
    ON concern.concerned_user = user_info.user_id
    WHERE
    concern.status=1
    <if test="userId != null">
      AND concern.concern_user = #{userId,jdbcType=VARCHAR}
    </if>
  </select>
</mapper>