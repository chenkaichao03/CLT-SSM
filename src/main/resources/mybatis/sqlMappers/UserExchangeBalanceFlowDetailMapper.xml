<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.clt.core.mapper.UserExchangeBalanceFlowDetailMapper">
  <resultMap id="BaseResultMap" type="cn.clt.core.entity.UserExchangeBalanceFlowDetail">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="flow_id" jdbcType="VARCHAR" property="flowId" />
    <result column="exchange_id" jdbcType="VARCHAR" property="exchangeId" />
    <result column="exchange_type" jdbcType="VARCHAR" property="exchangeType" />
    <result column="exchange_name" jdbcType="VARCHAR" property="exchangeName" />
    <result column="exchange_money_before" jdbcType="DECIMAL" property="exchangeMoneyBefore" />
    <result column="exchange_money_after" jdbcType="DECIMAL" property="exchangeMoneyAfter" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, flow_id, exchange_id, exchange_type, exchange_name, exchange_money_before, exchange_money_after, 
    status, create_time, modify_time
  </sql>
  <select id="selectByExample" parameterType="cn.clt.core.entity.UserExchangeBalanceFlowDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_exchange_balance_flow_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_exchange_balance_flow_detail
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_exchange_balance_flow_detail
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.clt.core.entity.UserExchangeBalanceFlowDetailExample">
    delete from user_exchange_balance_flow_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.clt.core.entity.UserExchangeBalanceFlowDetail">
    insert into user_exchange_balance_flow_detail (id, flow_id, exchange_id, 
      exchange_type, exchange_name, exchange_money_before, 
      exchange_money_after, status, create_time, 
      modify_time)
    values (#{id,jdbcType=VARCHAR}, #{flowId,jdbcType=VARCHAR}, #{exchangeId,jdbcType=VARCHAR}, 
      #{exchangeType,jdbcType=VARCHAR}, #{exchangeName,jdbcType=VARCHAR}, #{exchangeMoneyBefore,jdbcType=DECIMAL}, 
      #{exchangeMoneyAfter,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.clt.core.entity.UserExchangeBalanceFlowDetail">
    insert into user_exchange_balance_flow_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="flowId != null">
        flow_id,
      </if>
      <if test="exchangeId != null">
        exchange_id,
      </if>
      <if test="exchangeType != null">
        exchange_type,
      </if>
      <if test="exchangeName != null">
        exchange_name,
      </if>
      <if test="exchangeMoneyBefore != null">
        exchange_money_before,
      </if>
      <if test="exchangeMoneyAfter != null">
        exchange_money_after,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="flowId != null">
        #{flowId,jdbcType=VARCHAR},
      </if>
      <if test="exchangeId != null">
        #{exchangeId,jdbcType=VARCHAR},
      </if>
      <if test="exchangeType != null">
        #{exchangeType,jdbcType=VARCHAR},
      </if>
      <if test="exchangeName != null">
        #{exchangeName,jdbcType=VARCHAR},
      </if>
      <if test="exchangeMoneyBefore != null">
        #{exchangeMoneyBefore,jdbcType=DECIMAL},
      </if>
      <if test="exchangeMoneyAfter != null">
        #{exchangeMoneyAfter,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.clt.core.entity.UserExchangeBalanceFlowDetailExample" resultType="java.lang.Long">
    select count(*) from user_exchange_balance_flow_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_exchange_balance_flow_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.flowId != null">
        flow_id = #{record.flowId,jdbcType=VARCHAR},
      </if>
      <if test="record.exchangeId != null">
        exchange_id = #{record.exchangeId,jdbcType=VARCHAR},
      </if>
      <if test="record.exchangeType != null">
        exchange_type = #{record.exchangeType,jdbcType=VARCHAR},
      </if>
      <if test="record.exchangeName != null">
        exchange_name = #{record.exchangeName,jdbcType=VARCHAR},
      </if>
      <if test="record.exchangeMoneyBefore != null">
        exchange_money_before = #{record.exchangeMoneyBefore,jdbcType=DECIMAL},
      </if>
      <if test="record.exchangeMoneyAfter != null">
        exchange_money_after = #{record.exchangeMoneyAfter,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_exchange_balance_flow_detail
    set id = #{record.id,jdbcType=VARCHAR},
      flow_id = #{record.flowId,jdbcType=VARCHAR},
      exchange_id = #{record.exchangeId,jdbcType=VARCHAR},
      exchange_type = #{record.exchangeType,jdbcType=VARCHAR},
      exchange_name = #{record.exchangeName,jdbcType=VARCHAR},
      exchange_money_before = #{record.exchangeMoneyBefore,jdbcType=DECIMAL},
      exchange_money_after = #{record.exchangeMoneyAfter,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.clt.core.entity.UserExchangeBalanceFlowDetail">
    update user_exchange_balance_flow_detail
    <set>
      <if test="flowId != null">
        flow_id = #{flowId,jdbcType=VARCHAR},
      </if>
      <if test="exchangeId != null">
        exchange_id = #{exchangeId,jdbcType=VARCHAR},
      </if>
      <if test="exchangeType != null">
        exchange_type = #{exchangeType,jdbcType=VARCHAR},
      </if>
      <if test="exchangeName != null">
        exchange_name = #{exchangeName,jdbcType=VARCHAR},
      </if>
      <if test="exchangeMoneyBefore != null">
        exchange_money_before = #{exchangeMoneyBefore,jdbcType=DECIMAL},
      </if>
      <if test="exchangeMoneyAfter != null">
        exchange_money_after = #{exchangeMoneyAfter,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.clt.core.entity.UserExchangeBalanceFlowDetail">
    update user_exchange_balance_flow_detail
    set flow_id = #{flowId,jdbcType=VARCHAR},
      exchange_id = #{exchangeId,jdbcType=VARCHAR},
      exchange_type = #{exchangeType,jdbcType=VARCHAR},
      exchange_name = #{exchangeName,jdbcType=VARCHAR},
      exchange_money_before = #{exchangeMoneyBefore,jdbcType=DECIMAL},
      exchange_money_after = #{exchangeMoneyAfter,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>