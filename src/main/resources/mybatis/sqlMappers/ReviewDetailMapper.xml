<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.clt.core.mapper.ReviewDetailMapper">
  <resultMap id="BaseResultMap" type="cn.clt.core.entity.ReviewDetail">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="review_id" jdbcType="VARCHAR" property="reviewId" />
    <result column="article_id" jdbcType="VARCHAR" property="articleId" />
    <result column="review_user_id" jdbcType="VARCHAR" property="reviewUserId" />
    <result column="review_user_picture" jdbcType="VARCHAR" property="reviewUserPicture" />
    <result column="review_user_name" jdbcType="VARCHAR" property="reviewUserName" />
    <result column="parent_review_id" jdbcType="VARCHAR" property="parentReviewId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.clt.core.entity.ReviewDetail">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, review_id, article_id, review_user_id, review_user_picture, review_user_name, 
    parent_review_id, status, create_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.clt.core.entity.ReviewDetailExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from review_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.clt.core.entity.ReviewDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from review_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from review_detail
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from review_detail
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.clt.core.entity.ReviewDetailExample">
    delete from review_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.clt.core.entity.ReviewDetail">
    insert into review_detail (id, review_id, article_id, 
      review_user_id, review_user_picture, review_user_name, 
      parent_review_id, status, create_time, 
      content)
    values (#{id,jdbcType=VARCHAR}, #{reviewId,jdbcType=VARCHAR}, #{articleId,jdbcType=VARCHAR}, 
      #{reviewUserId,jdbcType=VARCHAR}, #{reviewUserPicture,jdbcType=VARCHAR}, #{reviewUserName,jdbcType=VARCHAR}, 
      #{parentReviewId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.clt.core.entity.ReviewDetail">
    insert into review_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="reviewId != null">
        review_id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="reviewUserId != null">
        review_user_id,
      </if>
      <if test="reviewUserPicture != null">
        review_user_picture,
      </if>
      <if test="reviewUserName != null">
        review_user_name,
      </if>
      <if test="parentReviewId != null">
        parent_review_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="reviewId != null">
        #{reviewId,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="reviewUserId != null">
        #{reviewUserId,jdbcType=VARCHAR},
      </if>
      <if test="reviewUserPicture != null">
        #{reviewUserPicture,jdbcType=VARCHAR},
      </if>
      <if test="reviewUserName != null">
        #{reviewUserName,jdbcType=VARCHAR},
      </if>
      <if test="parentReviewId != null">
        #{parentReviewId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.clt.core.entity.ReviewDetailExample" resultType="java.lang.Long">
    select count(*) from review_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update review_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewId != null">
        review_id = #{record.reviewId,jdbcType=VARCHAR},
      </if>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewUserId != null">
        review_user_id = #{record.reviewUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewUserPicture != null">
        review_user_picture = #{record.reviewUserPicture,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewUserName != null">
        review_user_name = #{record.reviewUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentReviewId != null">
        parent_review_id = #{record.parentReviewId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update review_detail
    set id = #{record.id,jdbcType=VARCHAR},
      review_id = #{record.reviewId,jdbcType=VARCHAR},
      article_id = #{record.articleId,jdbcType=VARCHAR},
      review_user_id = #{record.reviewUserId,jdbcType=VARCHAR},
      review_user_picture = #{record.reviewUserPicture,jdbcType=VARCHAR},
      review_user_name = #{record.reviewUserName,jdbcType=VARCHAR},
      parent_review_id = #{record.parentReviewId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update review_detail
    set id = #{record.id,jdbcType=VARCHAR},
      review_id = #{record.reviewId,jdbcType=VARCHAR},
      article_id = #{record.articleId,jdbcType=VARCHAR},
      review_user_id = #{record.reviewUserId,jdbcType=VARCHAR},
      review_user_picture = #{record.reviewUserPicture,jdbcType=VARCHAR},
      review_user_name = #{record.reviewUserName,jdbcType=VARCHAR},
      parent_review_id = #{record.parentReviewId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.clt.core.entity.ReviewDetail">
    update review_detail
    <set>
      <if test="reviewId != null">
        review_id = #{reviewId,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="reviewUserId != null">
        review_user_id = #{reviewUserId,jdbcType=VARCHAR},
      </if>
      <if test="reviewUserPicture != null">
        review_user_picture = #{reviewUserPicture,jdbcType=VARCHAR},
      </if>
      <if test="reviewUserName != null">
        review_user_name = #{reviewUserName,jdbcType=VARCHAR},
      </if>
      <if test="parentReviewId != null">
        parent_review_id = #{parentReviewId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.clt.core.entity.ReviewDetail">
    update review_detail
    set review_id = #{reviewId,jdbcType=VARCHAR},
      article_id = #{articleId,jdbcType=VARCHAR},
      review_user_id = #{reviewUserId,jdbcType=VARCHAR},
      review_user_picture = #{reviewUserPicture,jdbcType=VARCHAR},
      review_user_name = #{reviewUserName,jdbcType=VARCHAR},
      parent_review_id = #{parentReviewId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.clt.core.entity.ReviewDetail">
    update review_detail
    set review_id = #{reviewId,jdbcType=VARCHAR},
      article_id = #{articleId,jdbcType=VARCHAR},
      review_user_id = #{reviewUserId,jdbcType=VARCHAR},
      review_user_picture = #{reviewUserPicture,jdbcType=VARCHAR},
      review_user_name = #{reviewUserName,jdbcType=VARCHAR},
      parent_review_id = #{parentReviewId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="listReviewDetailPage" parameterType="map" resultType="cn.clt.core.vo.ReviewDetalVO">
    select
    article.article_title AS articleTitle,
    review_detail.article_id AS articleId,
    review_detail.create_time AS createTime,
    review_detail.content AS content,
    review.content AS reviewContent,
    review.id AS reviewId
    FROM review_detail
    LEFT JOIN article
    ON review_detail.article_id = article.id AND article.status = 1
    LEFT JOIN review
    ON review_detail.review_id = review.id AND review.status = 1
    where review_detail.status =1
    <if test="userId != null">
     AND review_detail.review_user_id = #{userId}
    </if>
    ORDER by review_detail.create_time
    <if test="pagination">
      limit #{pagination.start},#{pagination.pageSize}
    </if>
  </select>
  <select id="countReviewDetailPage" parameterType="map" resultType="java.lang.Long">
    select
    COUNT(1)
    FROM review_detail
    LEFT JOIN article
    ON review_detail.article_id = article.id AND article.status = 1
    LEFT JOIN review
    ON review_detail.review_id = review.id AND review.status = 1
    where review_detail.status =1
    <if test="userId != null">
      AND review_detail.review_user_id = #{userId}
    </if>
    ORDER by review_detail.create_time
  </select>
</mapper>